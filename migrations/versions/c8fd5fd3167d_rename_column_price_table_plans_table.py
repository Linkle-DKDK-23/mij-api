"""rename column price table plans table

Revision ID: c8fd5fd3167d
Revises: 05d6ec9db2d6
Create Date: 2025-10-15 15:07:47.539611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c8fd5fd3167d'
down_revision: Union[str, Sequence[str], None] = '05d6ec9db2d6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription_periods')
    op.add_column('plans', sa.Column('price', sa.BigInteger(), nullable=False))
    op.add_column('prices', sa.Column('post_id', sa.UUID(), nullable=False))
    op.add_column('prices', sa.Column('starts_at', sa.DateTime(), nullable=False))
    op.add_column('prices', sa.Column('ends_at', sa.DateTime(), nullable=True))
    op.add_column('prices', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.drop_constraint(op.f('fk_prices_plan_id_plans'), 'prices', type_='foreignkey')
    op.create_foreign_key(op.f('fk_prices_post_id_posts'), 'prices', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.drop_column('prices', 'status')
    op.drop_column('prices', 'interval')
    op.drop_column('prices', 'external_price_id')
    op.drop_column('prices', 'plan_id')
    op.drop_column('prices', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('prices', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('prices', sa.Column('plan_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('prices', sa.Column('external_price_id', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('prices', sa.Column('interval', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('prices', sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f('fk_prices_post_id_posts'), 'prices', type_='foreignkey')
    op.create_foreign_key(op.f('fk_prices_plan_id_plans'), 'prices', 'plans', ['plan_id'], ['id'], ondelete='CASCADE')
    op.drop_column('prices', 'is_active')
    op.drop_column('prices', 'ends_at')
    op.drop_column('prices', 'starts_at')
    op.drop_column('prices', 'post_id')
    op.drop_column('plans', 'price')
    op.create_table('subscription_periods',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('subscription_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('period_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('period_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('invoice_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], name=op.f('fk_subscription_periods_subscription_id_subscriptions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscription_periods'))
    )
    # ### end Alembic commands ###
