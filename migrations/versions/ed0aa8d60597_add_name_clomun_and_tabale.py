"""add name clomun and tabale

Revision ID: ed0aa8d60597
Revises: 5603d4262927
Create Date: 2025-08-14 14:03:49.041604

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed0aa8d60597'
down_revision: Union[str, Sequence[str], None] = '5603d4262927'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gender',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('slug', postgresql.CITEXT(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gender')),
    sa.UniqueConstraint('slug', name=op.f('uq_gender_slug'))
    )
    op.create_table('creator_type',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('gender_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], name=op.f('fk_creator_type_gender_id_gender'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_creator_type_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_creator_type'))
    )
    op.create_index(op.f('ix_creator_type_gender_id'), 'creator_type', ['gender_id'], unique=False)
    op.create_index(op.f('ix_creator_type_user_id'), 'creator_type', ['user_id'], unique=False)
    op.add_column('creators', sa.Column('name', sa.Text(), nullable=True))
    op.add_column('creators', sa.Column('first_name_kana', sa.Text(), nullable=True))
    op.add_column('creators', sa.Column('last_name_kana', sa.Text(), nullable=True))
    op.add_column('creators', sa.Column('address', sa.Text(), nullable=True))
    op.add_column('creators', sa.Column('phone_number', sa.Text(), nullable=True))
    op.add_column('creators', sa.Column('birth_date', sa.DateTime(), nullable=True))
    op.drop_constraint(op.f('uq_creators_slug'), 'creators', type_='unique')
    op.drop_column('creators', 'slug')
    op.add_column('users', sa.Column('slug', postgresql.CITEXT(), nullable=True))
    op.create_unique_constraint(op.f('uq_users_slug'), 'users', ['slug'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_users_slug'), 'users', type_='unique')
    op.drop_column('users', 'slug')
    op.add_column('creators', sa.Column('slug', postgresql.CITEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('uq_creators_slug'), 'creators', ['slug'], postgresql_nulls_not_distinct=False)
    op.drop_column('creators', 'birth_date')
    op.drop_column('creators', 'phone_number')
    op.drop_column('creators', 'address')
    op.drop_column('creators', 'last_name_kana')
    op.drop_column('creators', 'first_name_kana')
    op.drop_column('creators', 'name')
    op.drop_index(op.f('ix_creator_type_user_id'), table_name='creator_type')
    op.drop_index(op.f('ix_creator_type_gender_id'), table_name='creator_type')
    op.drop_table('creator_type')
    op.drop_table('gender')
    # ### end Alembic commands ###
