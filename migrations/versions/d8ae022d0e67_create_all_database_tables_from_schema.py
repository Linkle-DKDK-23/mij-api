"""Create all database tables from schema

Revision ID: d8ae022d0e67
Revises: 98e0c1aacc07
Create Date: 2025-08-13 09:56:40.711489

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd8ae022d0e67'
down_revision: Union[str, Sequence[str], None] = '98e0c1aacc07'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('i18n_languages',
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_i18n_languages'))
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('slug', postgresql.CITEXT(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('slug', name=op.f('uq_tags_slug'))
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('actor_user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Text(), nullable=False),
    sa.Column('object_type', sa.Text(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['actor_user_id'], ['users.id'], name=op.f('fk_audit_logs_actor_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_table('creator_balances',
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('available', sa.BigInteger(), nullable=False),
    sa.Column('pending', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_creator_balances_creator_user_id_users')),
    sa.PrimaryKeyConstraint('creator_user_id', name=op.f('pk_creator_balances'))
    )
    op.create_table('follows',
    sa.Column('follower_user_id', sa.UUID(), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_follows_creator_user_id_users')),
    sa.ForeignKeyConstraint(['follower_user_id'], ['users.id'], name=op.f('fk_follows_follower_user_id_users')),
    sa.PrimaryKeyConstraint('follower_user_id', 'creator_user_id', name=op.f('pk_follows'))
    )
    op.create_table('i18n_texts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('lang_code', sa.Text(), nullable=False),
    sa.Column('object_type', sa.Text(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lang_code'], ['i18n_languages.code'], name=op.f('fk_i18n_texts_lang_code_i18n_languages')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_i18n_texts'))
    )
    op.create_table('identity_verifications',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('checked_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_identity_verifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_identity_verifications'))
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.SmallInteger(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_table('orders',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('total_amount', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.Text(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_orders_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_table('payout_accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.SmallInteger(), nullable=False),
    sa.Column('external_account_id', sa.Text(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_payout_accounts_creator_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payout_accounts'))
    )
    op.create_table('payouts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_payouts_creator_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payouts'))
    )
    op.create_table('plans',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.Text(), nullable=False),
    sa.Column('billing_cycle', sa.SmallInteger(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_plans_creator_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plans'))
    )
    op.create_table('posts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('thumbnail_storage_key', sa.Text(), nullable=True),
    sa.Column('video_storage_key', sa.Text(), nullable=True),
    sa.Column('video_duration', sa.BigInteger(), nullable=True),
    sa.Column('visibility', sa.SmallInteger(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_posts_creator_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_posts'))
    )
    op.create_table('reports',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('reporter_user_id', sa.UUID(), nullable=False),
    sa.Column('target_type', sa.SmallInteger(), nullable=False),
    sa.Column('target_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['reporter_user_id'], ['users.id'], name=op.f('fk_reports_reporter_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reports'))
    )
    op.create_table('bookmarks',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_bookmarks_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bookmarks_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name=op.f('pk_bookmarks'))
    )
    op.create_table('comments',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('parent_comment_id', sa.UUID(), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.id'], name=op.f('fk_comments_parent_comment_id_comments')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_comments_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_table('identity_documents',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('verification_id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.SmallInteger(), nullable=False),
    sa.Column('storage_key', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['verification_id'], ['identity_verifications.id'], name=op.f('fk_identity_documents_verification_id_identity_verifications'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_identity_documents'))
    )
    op.create_table('likes',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_likes_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_likes_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name=op.f('pk_likes'))
    )
    op.create_table('order_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('item_type', sa.SmallInteger(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_order_items_creator_user_id_users')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_items_order_id_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_order_items_plan_id_plans')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_order_items_post_id_posts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_items'))
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.SmallInteger(), nullable=False),
    sa.Column('provider_payment_id', sa.Text(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.Column('processed_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_payments_order_id_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_tags_post_id_posts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_post_tags_tag_id_tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'tag_id', name=op.f('pk_post_tags'))
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_subscriptions_plan_id_plans')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_subscriptions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions'))
    )
    op.create_table('entitlements',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.SmallInteger(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('creator_user_id', sa.UUID(), nullable=True),
    sa.Column('starts_at', sa.DateTime(), nullable=False),
    sa.Column('ends_at', sa.DateTime(), nullable=True),
    sa.Column('granted_by_type', sa.SmallInteger(), nullable=False),
    sa.Column('granted_by_subscription_id', sa.UUID(), nullable=True),
    sa.Column('granted_by_order_item_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], name=op.f('fk_entitlements_creator_user_id_users')),
    sa.ForeignKeyConstraint(['granted_by_order_item_id'], ['order_items.id'], name=op.f('fk_entitlements_granted_by_order_item_id_order_items')),
    sa.ForeignKeyConstraint(['granted_by_subscription_id'], ['subscriptions.id'], name=op.f('fk_entitlements_granted_by_subscription_id_subscriptions')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_entitlements_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_entitlements_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_entitlements'))
    )
    op.create_index('idx_entitlements_user_scope', 'entitlements', ['user_id', 'scope', 'creator_user_id', 'ends_at'], unique=False)
    op.create_table('payout_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('payout_id', sa.UUID(), nullable=False),
    sa.Column('order_item_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name=op.f('fk_payout_items_order_item_id_order_items')),
    sa.ForeignKeyConstraint(['payout_id'], ['payouts.id'], name=op.f('fk_payout_items_payout_id_payouts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payout_items'))
    )
    op.create_table('refunds',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('payment_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_refunds_payment_id_payments'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refunds'))
    )
    op.add_column('users', sa.Column('password_hash', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('display_name', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('avatar_storage_key', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('cover_storage_key', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('account_type', sa.SmallInteger(), nullable=False))
    op.add_column('users', sa.Column('account_status', sa.SmallInteger(), nullable=False))
    op.add_column('users', sa.Column('email_verified_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'email_verified_at')
    op.drop_column('users', 'account_status')
    op.drop_column('users', 'account_type')
    op.drop_column('users', 'cover_storage_key')
    op.drop_column('users', 'avatar_storage_key')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'display_name')
    op.drop_column('users', 'password_hash')
    op.drop_table('refunds')
    op.drop_table('payout_items')
    op.drop_index('idx_entitlements_user_scope', table_name='entitlements')
    op.drop_table('entitlements')
    op.drop_table('subscriptions')
    op.drop_table('post_tags')
    op.drop_table('payments')
    op.drop_table('order_items')
    op.drop_table('likes')
    op.drop_table('identity_documents')
    op.drop_table('comments')
    op.drop_table('bookmarks')
    op.drop_table('reports')
    op.drop_table('posts')
    op.drop_table('plans')
    op.drop_table('payouts')
    op.drop_table('payout_accounts')
    op.drop_table('orders')
    op.drop_table('notifications')
    op.drop_table('identity_verifications')
    op.drop_table('i18n_texts')
    op.drop_table('follows')
    op.drop_table('creator_balances')
    op.drop_table('audit_logs')
    op.drop_table('tags')
    op.drop_table('i18n_languages')
    # ### end Alembic commands ###
