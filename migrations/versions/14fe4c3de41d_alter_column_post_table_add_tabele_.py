"""alter column post table & add tabele purchases post_plans post_moderation_events

Revision ID: 14fe4c3de41d
Revises: 277af7bc8012
Create Date: 2025-08-27 17:52:06.408397

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '14fe4c3de41d'
down_revision: Union[str, Sequence[str], None] = '277af7bc8012'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post_moderation_events',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('to_state', sa.SmallInteger(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('acted_by_id', sa.UUID(), nullable=False),
    sa.Column('acted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['acted_by_id'], ['users.id'], name=op.f('fk_post_moderation_events_acted_by_id_users')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_moderation_events_post_id_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_post_moderation_events'))
    )
    op.create_table('post_plans',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_post_plans_plan_id_plans'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_plans_post_id_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'plan_id', name=op.f('pk_post_plans'))
    )
    op.create_table('purchases',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_purchases_plan_id_plans')),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_purchases_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_purchases_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchases'))
    )
    op.add_column('posts', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('posts', sa.Column('scheduled_at', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('expiration_at', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('moderation_state', sa.SmallInteger(), nullable=False))
    op.add_column('posts', sa.Column('moderation_reason', sa.Text(), nullable=True))
    op.add_column('posts', sa.Column('moderation_flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('posts', sa.Column('moderated_at', sa.DateTime(), nullable=True))
    op.add_column('posts', sa.Column('moderated_by', sa.UUID(), nullable=True))
    op.drop_column('posts', 'title')
    op.drop_column('posts', 'body')
    op.drop_column('posts', 'published_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posts', sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('posts', sa.Column('body', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('posts', sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_column('posts', 'moderated_by')
    op.drop_column('posts', 'moderated_at')
    op.drop_column('posts', 'moderation_flags')
    op.drop_column('posts', 'moderation_reason')
    op.drop_column('posts', 'moderation_state')
    op.drop_column('posts', 'expiration_at')
    op.drop_column('posts', 'scheduled_at')
    op.drop_column('posts', 'description')
    op.drop_table('purchases')
    op.drop_table('post_plans')
    op.drop_table('post_moderation_events')
    # ### end Alembic commands ###
