"""Add missing tables: profiles, creators, genres, categories, media assets, prices, subscription periods

Revision ID: c0e4b5c269a2
Revises: d8ae022d0e67
Create Date: 2025-08-13 10:16:21.183718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c0e4b5c269a2'
down_revision: Union[str, Sequence[str], None] = 'd8ae022d0e67'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('slug', postgresql.CITEXT(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genres')),
    sa.UniqueConstraint('slug', name=op.f('uq_genres_slug'))
    )
    op.create_table('categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('genre_id', sa.UUID(), nullable=False),
    sa.Column('slug', postgresql.CITEXT(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], name=op.f('fk_categories_genre_id_genres'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('slug', name=op.f('uq_categories_slug'))
    )
    op.create_index(op.f('ix_categories_genre_id'), 'categories', ['genre_id'], unique=False)
    op.create_table('profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('display_name', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('links', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profiles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_profiles'))
    )
    op.create_table('creators',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('slug', postgresql.CITEXT(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('country_code', sa.Text(), nullable=True),
    sa.Column('tax_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tos_accepted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_creators_category_id_categories')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_creators_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_creators')),
    sa.UniqueConstraint('slug', name=op.f('uq_creators_slug'))
    )
    op.create_table('media_assets',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('storage_bucket', sa.Text(), nullable=False),
    sa.Column('storage_key', sa.Text(), nullable=False),
    sa.Column('mime_type', sa.Text(), nullable=False),
    sa.Column('bytes', sa.BigInteger(), nullable=False),
    sa.Column('duration_sec', sa.NUMERIC(precision=10, scale=3), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('hash_sha256', sa.LargeBinary(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_media_assets_post_id_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_assets'))
    )
    op.create_table('post_categories',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_post_categories_category_id_categories'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_categories_post_id_posts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'category_id', name=op.f('pk_post_categories'))
    )
    op.create_index(op.f('ix_post_categories_category_id'), 'post_categories', ['category_id'], unique=False)
    op.create_index(op.f('ix_post_categories_post_id'), 'post_categories', ['post_id'], unique=False)
    op.create_table('prices',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.SmallInteger(), nullable=False),
    sa.Column('interval', sa.SmallInteger(), nullable=True),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.Column('unit_amount', sa.BigInteger(), nullable=False),
    sa.Column('external_price_id', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_prices_plan_id_plans'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prices'))
    )
    op.create_table('media_renditions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.SmallInteger(), nullable=False),
    sa.Column('storage_key', sa.Text(), nullable=False),
    sa.Column('mime_type', sa.Text(), nullable=False),
    sa.Column('bytes', sa.BigInteger(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration_sec', sa.NUMERIC(precision=10, scale=3), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['media_assets.id'], name=op.f('fk_media_renditions_asset_id_media_assets'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_renditions'))
    )
    op.create_table('subscription_periods',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('invoice_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], name=op.f('fk_subscription_periods_subscription_id_subscriptions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscription_periods'))
    )
    op.add_column('users', sa.Column('role', sa.SmallInteger(), nullable=False))
    op.add_column('users', sa.Column('status', sa.SmallInteger(), nullable=False))
    op.drop_column('users', 'account_status')
    op.drop_column('users', 'account_type')
    op.drop_column('users', 'display_name')
    op.drop_column('users', 'avatar_storage_key')
    op.drop_column('users', 'cover_storage_key')
    op.drop_column('users', 'bio')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('cover_storage_key', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('avatar_storage_key', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('display_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('account_type', sa.SMALLINT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('account_status', sa.SMALLINT(), autoincrement=False, nullable=False))
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    op.drop_table('subscription_periods')
    op.drop_table('media_renditions')
    op.drop_table('prices')
    op.drop_index(op.f('ix_post_categories_post_id'), table_name='post_categories')
    op.drop_index(op.f('ix_post_categories_category_id'), table_name='post_categories')
    op.drop_table('post_categories')
    op.drop_table('media_assets')
    op.drop_table('creators')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_categories_genre_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_table('genres')
    # ### end Alembic commands ###
